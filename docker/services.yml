version: '3.8'

networks:
    test_net:
        driver: bridge
        
services:
# Application
  web:
    image: ex-currency
    ports:
      - '9090:9090'
    networks:
      - test_net
    environment:
      REDIS_URL : redis
      REDIS_PORT : 6379
      DB_URL : db
      DB_PORT : 3306
      DB_USERNAME : root
      DB_PASSWORD : root
    links:
       - db
       - redis
       - fluentd
    depends_on:
       - db
       - redis 
       - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: "true"
        tag: docker  
## Mysql
  db:
    image: mysql:8.0
    container_name: db
    cap_add:
      - SYS_NICE
    environment:
      - MYSQL_DATABASE=dating
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - test_net
# Redis
  redis:
    image: docker.io/bitnami/redis:6.2
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - test_net

# fluentd       
  fluentd:
    build: ./fluentd
    container_name: fluentd
    volumes:
      - ./fluentd/:/fluentd/etc
    ports:
      - 24224:24224
    networks:
      - test_net

# Zookeper
  zookeeper:
    image: quay.io/debezium/zookeeper:2.0
    container_name: zookeeper
    networks:
      - test_net
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

#Kafka
  kafka:
    image: quay.io/debezium/kafka:2.0
    container_name: kafka
    networks:
      - test_net
    depends_on:
       - zookeeper
    environment:
       - ZOOKEEPER_CONNECT=zookeeper:2181
       - KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS=100
    ports:
      - 9092:9092
    links:
       - zookeeper:zookeeper  

# kafka-connect
  connect:
    image: quay.io/debezium/connect:2.0
    container_name: connect
    networks:
      - test_net
    depends_on:
       - kafka
       - db
    environment:
       - BOOTSTRAP_SERVERS=kafka:9092
       - GROUP_ID=1
       - CONFIG_STORAGE_TOPIC=my_connect_configs
       - OFFSET_STORAGE_TOPIC=my_connect_offsets
       - STATUS_STORAGE_TOPIC=my_connect_statuses
    ports:
      - 8083:8083
    links:
       - db:db
       - kafka:kafka


volumes:
   redis_data:
      driver: local   
   db:
      driver: local

 